// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Student {
  id                   String                 @id @default(uuid())
  firstName            String
  lastName             String
  fullName             String
  class                Class                  @relation(fields: [classId], references: [id])
  classId              String
  AssignmentSubmission AssignmentSubmission[]
  studentAttendance    StudentAttendance[]
  studentAccount       StudentAccount[]
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model Teacher {
  id             String           @id @default(uuid())
  firstName      String
  lastName       String
  fullName       String
  course         Course[]
  teacherAccount TeacherAccount[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Class {
  id         String    @id @default(uuid())
  name       String
  population Int
  students   Student[]
  courses    Course[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Course {
  id            String         @id @default(uuid())
  name          String
  imageUrl      String?
  teacher       Teacher        @relation(fields: [teacherId], references: [id])
  teacherId     String
  class         Class          @relation(fields: [classId], references: [id])
  classId       String
  subject       Subject        @relation(fields: [subjectId], references: [id])
  subjectId     String
  conferences   Conference[]
  posts         Post[]
  materialUnits MaterialUnit[]
  practiceUnits PracticeUnit[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Exercice {
  id                   String                @id @default(uuid())
  name                 String
  practiceUnit         PracticeUnit          @relation(fields: [practiceUnitId], references: [id])
  practiceUnitId       String
  exerciceAttachements ExerciceAttachement[]
  description          String

  isAssignment          Boolean
  deadlineTimestamp     DateTime?
  assignmentSubmissions AssignmentSubmission[]
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt

}

model PracticeUnit {
  id       String @id @default(uuid())
  title    String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  exercices Exercice[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Subject {
  id          String   @id @default(uuid())
  name        String
  coefficient Float
  courses     Course[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CourseMaterial {
  id                   String                @id @default(uuid())
  name                 String
  url                  String
  materialAttachements MaterialAttachement[]
  materialUnit         MaterialUnit         @relation(fields: [materialUnitId], references: [id])
  materialUnitId       String
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
}

model MaterialUnit {
  id       String @id @default(uuid())
  title    String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  courseMaterials CourseMaterial[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model Attachement {
  id                     String                  @id @default(uuid())
  name                   String
  fileExtension          String
  size                   String
  exerciceAttachements   ExerciceAttachement[]
  postAttachements       PostAttachement[]
  materialAttachements   MaterialAttachement[]
  submissionAttachements SubmissionAttachement[]
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
}

model Conference {
  id                 String              @id @default(uuid())
  title              String
  status             String
  scheduledStartTime DateTime
  scheduledEndTime   DateTime
  stats              Json
  course             Course              @relation(fields: [courseId], references: [id])
  courseId           String
  studentAttendances StudentAttendance[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
}

model AssignmentSubmission {
  id                        String                  @id @default(uuid())
  exercice                  Exercice                @relation(fields: [exerciceId], references: [id])
  exerciceId                String
  student                   Student                 @relation(fields: [studentId], references: [id])
  studentId                 String
  firstSubmissionTimestamp  DateTime
  latestSubmissionTimestamp DateTime?
  submissionsCount          Int
  submissionAttachements    SubmissionAttachement[]
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
}

model Post {
  id   String @id @default(uuid())
  text String

  course           Course            @relation(fields: [courseId], references: [id])
  courseId         String
  postAttachements PostAttachement[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model Admin {
  id            String          @id @default(uuid())
  firstName     String
  lastName      String
  announcements Announcements[]
  adminAccounts AdminAccount[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Announcements {
  id        String   @id @default(uuid())
  timestamp DateTime
  topic     String
  admin     Admin    @relation(fields: [adminId], references: [id])
  adminId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Account {
  id              String           @id @default(uuid())
  userName        String
  passwordSalt    String
  passwordHash    String
  relatedUserId   Int
  adminAccounts   AdminAccount[]
  teacherAccounts TeacherAccount[]
  studentAccounts StudentAccount[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model StudentAttendance {
  id           String     @id @default(uuid())
  student      Student    @relation(fields: [studentId], references: [id])
  studentId    String
  ratio        Float
  conference   Conference @relation(fields: [conferenceId], references: [id])
  conferenceId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model ExerciceAttachement {
  exercice      Exercice    @relation(fields: [exerciceId], references: [id])
  exerciceId    String
  attachement   Attachement @relation(fields: [attachementId], references: [id])
  attachementId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([exerciceId, attachementId])
}

model PostAttachement {
  post          Post        @relation(fields: [postId], references: [id])
  postId        String
  attachement   Attachement @relation(fields: [attachementId], references: [id])
  attachementId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([postId, attachementId])
}

model MaterialAttachement {
  material      CourseMaterial @relation(fields: [materialId], references: [id])
  materialId    String
  attachement   Attachement    @relation(fields: [attachementId], references: [id])
  attachementId String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@id([materialId, attachementId])
}

model SubmissionAttachement {
  submission    AssignmentSubmission @relation(fields: [submissionId], references: [id])
  submissionId  String
  attachement   Attachement          @relation(fields: [attachementId], references: [id])
  attachementId String
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt

  @@id([submissionId, attachementId])
}

model AdminAccount {
  admin     Admin    @relation(fields: [adminId], references: [id])
  adminId   String
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([adminId, accountId])
}

model TeacherAccount {
  teacher   Teacher  @relation(fields: [teacherId], references: [id])
  teacherId String
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([teacherId, accountId])
}

model StudentAccount {
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([studentId, accountId])
}
